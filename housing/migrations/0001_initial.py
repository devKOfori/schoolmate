# Generated by Django 5.0.2 on 2024-03-29 17:05

import datetime
import django.db.models.deletion
import django.utils.timezone
import housing.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employee', '0001_initial'),
        ('finmate', '0001_initial'),
        ('school', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentUpdateType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'assignmentupdatetype',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'block',
            },
        ),
        migrations.CreateModel(
            name='DocumentVerificationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'documentverificationstatus',
            },
        ),
        migrations.CreateModel(
            name='FacilityCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'facilitycategory',
            },
        ),
        migrations.CreateModel(
            name='HostelAmenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'hostelamenities',
            },
        ),
        migrations.CreateModel(
            name='HostelRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'hostelroles',
            },
        ),
        migrations.CreateModel(
            name='HostelStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'hostelstatus',
            },
        ),
        migrations.CreateModel(
            name='OccupancyStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'occupancystatus',
            },
        ),
        migrations.CreateModel(
            name='OfferResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'offerresponse',
            },
        ),
        migrations.CreateModel(
            name='PaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_details', models.CharField(max_length=255)),
                ('payment_terms', models.TextField(blank=True, null=True)),
                ('currency_preference', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'paymentdetail',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'paymentmethod',
            },
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'propertytype',
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'requeststatus',
            },
        ),
        migrations.CreateModel(
            name='RoomOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_number', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'db_table': 'roomoffer',
            },
        ),
        migrations.CreateModel(
            name='RoomOfferStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'roomofferstatus',
            },
        ),
        migrations.CreateModel(
            name='RoomStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'roomstatus',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'roomtype',
            },
        ),
        migrations.CreateModel(
            name='VendorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'vendortype',
            },
        ),
        migrations.CreateModel(
            name='VericationDocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'verificationdocumenttype',
            },
        ),
        migrations.CreateModel(
            name='AssignRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('termination_date', models.DateTimeField(blank=True, null=True)),
                ('assignment_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.assignmentupdatetype')),
            ],
            options={
                'db_table': 'assignroom',
            },
        ),
        migrations.CreateModel(
            name='AssignmentUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('original_start_date', models.DateTimeField()),
                ('original_end_date', models.DateTimeField(blank=True, null=True)),
                ('original_termination_date', models.DateTimeField(blank=True, null=True)),
                ('new_start_date', models.DateTimeField()),
                ('new_end_date', models.DateTimeField(blank=True, null=True)),
                ('new_termination_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee.employee')),
                ('update_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='housing.assignmentupdatetype')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.assignroom')),
            ],
            options={
                'db_table': 'assignmentupdate',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('facility_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.facilitycategory')),
            ],
            options={
                'db_table': 'facility',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('floor_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('block', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='housing.block')),
            ],
            options={
                'db_table': 'floor',
            },
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('hostel_id', models.CharField(max_length=255, unique=True)),
                ('location', models.CharField(max_length=255)),
                ('capacity', models.PositiveBigIntegerField(default=0)),
                ('phone', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=255)),
                ('date_established', models.DateField(default=datetime.date.today)),
                ('company', models.CharField(max_length=255)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hostels', to='employee.employee')),
                ('warden', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee.employee')),
                ('amenities', models.ManyToManyField(to='housing.hostelamenities')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.hostelstatus')),
            ],
            options={
                'db_table': 'hostel',
            },
        ),
        migrations.AddField(
            model_name='block',
            name='hostel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.hostel'),
        ),
        migrations.CreateModel(
            name='HostelAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=255)),
                ('digital_address', models.CharField(blank=True, max_length=255)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.country')),
                ('hostel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='housing.hostel')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.region')),
            ],
            options={
                'db_table': 'hosteladdress',
            },
        ),
        migrations.CreateModel(
            name='HostelPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('photo', models.ImageField(upload_to='photos/hostels/%Y/%m/%d')),
                ('hostel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='housing.hostel')),
            ],
            options={
                'db_table': 'hostelphotos',
            },
        ),
        migrations.CreateModel(
            name='HostelTenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('phone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('gender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.gender')),
                ('nationality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.nationality')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hosteltenant',
            },
        ),
        migrations.AddField(
            model_name='assignroom',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.hosteltenant'),
        ),
        migrations.CreateModel(
            name='HostelVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('registration_number', models.CharField(max_length=50)),
                ('registration_date', models.DateField()),
                ('registration_authority', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('cancellation_policy', models.TextField(blank=True, null=True)),
                ('house_rules', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.employee')),
                ('payment_details', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.paymentdetail')),
                ('vendor_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.vendortype')),
            ],
            options={
                'db_table': 'hostelvendor',
            },
        ),
        migrations.AddField(
            model_name='hostel',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.hostelvendor'),
        ),
        migrations.AddField(
            model_name='paymentdetail',
            name='payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.paymentmethod'),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(db_index=True, max_length=255, unique=True)),
                ('capacity', models.PositiveIntegerField(default=0)),
                ('number_of_beds', models.PositiveBigIntegerField(default=1)),
                ('availability_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.block')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee.employee')),
                ('facilities', models.ManyToManyField(blank=True, to='housing.facility')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.floor')),
                ('hostel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.hostel')),
                ('occupancy_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.occupancystatus')),
                ('room_status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='housing.roomstatus')),
                ('room_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='housing.roomtype')),
            ],
            options={
                'db_table': 'room',
            },
        ),
        migrations.AddField(
            model_name='assignroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.room'),
        ),
        migrations.CreateModel(
            name='RoomOfferDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_offered', models.DateTimeField(auto_now_add=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('offered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee.employee')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.room')),
                ('room_offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.roomoffer')),
                ('offer_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.roomofferstatus')),
            ],
            options={
                'db_table': 'roomofferdetails',
            },
        ),
        migrations.AddField(
            model_name='roomoffer',
            name='rooms_offered_new',
            field=models.ManyToManyField(through='housing.RoomOfferDetails', to='housing.room'),
        ),
        migrations.CreateModel(
            name='RoomOfferResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomofferresponse_number', models.CharField(max_length=255)),
                ('response_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True)),
                ('rent_paid', models.BooleanField(default=False)),
                ('offer_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.roomoffer')),
                ('offer_response', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.offerresponse')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.room')),
            ],
            options={
                'db_table': 'roomofferresponse',
            },
        ),
        migrations.CreateModel(
            name='RoomRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('tenant_name', models.CharField(max_length=255)),
                ('tenant_email', models.EmailField(max_length=254)),
                ('tenant_phone', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('number_of_beds_required', models.PositiveIntegerField(default=1)),
                ('move_in_date_earliest', models.DateTimeField(blank=True, null=True, verbose_name='Move In Date (Earliest By)')),
                ('move_in_date_latest', models.DateTimeField(blank=True, null=True, verbose_name='Move In Date (Latest By)')),
                ('duration_of_stay', models.PositiveIntegerField(blank=True, null=True)),
                ('min_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.gender')),
                ('preferred_amenities', models.ManyToManyField(blank=True, to='housing.hostelamenities')),
                ('preferred_facilities', models.ManyToManyField(blank=True, to='housing.facility')),
                ('preferred_hostels', models.ManyToManyField(blank=True, to='housing.hostel')),
                ('preferred_payment_frequency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finmate.paymentfrequency')),
                ('request_status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='housing.requeststatus')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.hosteltenant')),
                ('preferred_room_types', models.ManyToManyField(blank=True, to='housing.roomtype')),
            ],
            options={
                'db_table': 'roomrequest',
            },
        ),
        migrations.AddField(
            model_name='roomoffer',
            name='room_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.roomrequest'),
        ),
        migrations.CreateModel(
            name='VerifyProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_id', models.CharField(max_length=255)),
                ('attachment', models.FileField(upload_to=housing.models.upload_to, verbose_name='Attach Document')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('verifypropertyinfo', models.TextField(blank=True)),
                ('property_verified', models.BooleanField(default=False)),
                ('property_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.propertytype')),
                ('upload_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='employee.employee')),
                ('verification_document_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.vericationdocumenttype')),
            ],
            options={
                'db_table': 'verifyproperty',
                'unique_together': {('application_id', 'verification_document_type')},
            },
        ),
        migrations.CreateModel(
            name='UpdateDocumentVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updatedocumentverification_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('date_of_update', models.DateField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('last_update_message', models.CharField(max_length=255)),
                ('comment', models.TextField(blank=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='employee.employee')),
                ('verification_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.documentverificationstatus')),
                ('verify_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.verifyproperty')),
            ],
            options={
                'db_table': 'updatedocumentverification',
            },
        ),
        migrations.CreateModel(
            name='HostelEmployeeAlloc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('role_end_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='employee.employee')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hostel_alloc', to='employee.employee')),
                ('hostel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='housing.hostel')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='housing.hostelroles')),
            ],
            options={
                'db_table': 'hostelemployeealloc',
                'unique_together': {('hostel', 'role', 'employee')},
            },
        ),
    ]
